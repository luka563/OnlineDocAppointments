@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = null;
}




<!DOCTYPE html>
<html lang="en">
@Html.Partial("_Head1");

<body>
    @Html.Partial("_Header");

    <main id="main">

        <!-- ======= Breadcrumbs Section ======= -->
        <section class="breadcrumbs">
            <div class="container">

                <div class="d-flex justify-content-between align-items-center">
                    <h2>PROFIL DOKTORA</h2>
                    <ol>
                        <li><a href="https://localhost:7103/#hero">Početna</a></li>
                        <li>Profil doktora</li>
                    </ol>
                </div>

            </div>
        </section><!-- End Breadcrumbs Section -->

        
        <section class="inner-page">
            <div class="container">
                <div class="row gy-5" data-aos="fade-in">
                    <div>
                        <

                                            
                        <section id="doctors" class="doctors">
                            <div class="container">
                                <div class="row">
                                    <div class="col-lg-6">
                                        <div  class="member d-flex align-items-start">
                                            @if (ViewBag.Profile != null)
                                            {
                                                ProfileDTO profile = ViewBag.Profile;

                                                <div class="pic">
                                                    <img id="imageOfUser"; src="@profile.Picture" class="img-fluid" alt="">
                                                    <input id="Picture" type="Text" value="@profile.Picture" hidden>
                                                </div>
                                                <div  class="member-info">
                                                    
                                                <form id="formId">
                                                    <div>
                                                    
                                                        <label>  Korisničko ime: </label>
                                                        <p>@profile.UserName</p>
                                                            <input class="form-control" id="UserName" type="Text" value="@profile.UserName" required hidden>
                                                    </div>
                                                    <div>
                                                        <label>Ime:</label>
                                                        <p>@profile.FirstName</p>
                                                        <input class="form-control" id="FirstName" type="Text" value="@profile.FirstName" required hidden>
                                                    </div>
                                                    <div>
                                                        <label>Prezime:</label>
                                                        <p>@profile.LastName</p>
                                                            <input class="form-control" id="LastName" type="Text" value="@profile.LastName" required hidden>
                                                    </div>
                                                    <div id="DateOfBirth">
                                                        <label>Datum rodjenja:</label>
                                                        <p>@profile.DateOfBirth</p>
                                                    </div>
                                                </form>
                                                    <input type="file" id="imageInput" accept="image/*">
                                                    <label for="imageInput" class="btn btn-primary">Izaberi sliku</label>
                                                    <button class="btn btn-primary" onclick="uploadImage()">Postavi sliku</button>
                                                </div>
                                            }
                                            </div>
                                        </div>
                                    </div>
                                </div>                            
                        </section>
                        
                  
                        <div>
                            <button id="edit" type="button" class="btn btn-primary">Edit</button>
                            <button id="cancel" type="button" class="btn btn-danger" hidden="hidden">Cancel</button>
                            <button id="save" type="button" class="btn btn-success" hidden="hidden">Save</button>
                            
                        </div>

                                                  
                        <form id="uploadForm">
                            @if (@User.IsInRole("Doctor") && !ViewBag.Profile.isVerified)
                        {  
                            <div>
                                <h2>Posaljite cv da bi verifikovali akaunt</h2>
                                    <input type="file" style="display:none" name="pdfFile" id="pdfFile">
                                    <label for="pdfFile" class="btn btn-primary">Izaberi CV</label>
                                <input type="submit" class="btn btn-primary" value="Posaljite Cv">
                            </div>
                        }
                        </form>
                        





                        <div id="terms"></div>
                        <div id="pickDate"></div>
                        <div id="tableID">

                            <table class="table">
                                <thead class="table-primary">                                
                                    <tr>                                    
                                        <th scope="col">Datum</th>
                                        <th scope="col">Puno ime i prezime</th>
                                        <th scope="col">Intervencije</th>
                                    </tr>
                                </thead>
                                <tbody>

                                </tbody>
                            </table>
                       
                        </div>
                
                    <!-- }-->
                    </div>
                </div>
            </div>
        </section>
        
    </main><!-- End #main -->
    <!-- ======= Footer ======= -->
    @Html.Partial("_Footer");

    <div id="preloader"></div>
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>

    <!-- Vendor JS Files -->
    <script src="../assets/vendor/purecounter/purecounter_vanilla.js"></script>
    <script src="../assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="../assets/vendor/glightbox/js/glightbox.min.js"></script>
    <script src="../assets/vendor/swiper/swiper-bundle.min.js"></script>
    <script src="../assets/vendor/php-email-form/validate.js"></script>

    <!-- Template Main JS File -->
    <script src="../assets/js/main.js"></script>

    <script>
        const buttonEdit = document.getElementById("edit");
        const buttonSave = document.getElementById("save");
        const buttonCancel = document.getElementById("cancel");
        const form = document.getElementById("formId");
        const divs = form.getElementsByTagName("div");



        document.getElementById('uploadForm').addEventListener('submit', function (event) {
            event.preventDefault(); 

            const fileInput = document.getElementById('pdfFile');
            const file = fileInput.files[0];

            const formData = new FormData();
            formData.append('pdfFile', file);
            formData.append('userName', '@User.Identity.Name');

            fetch('/User/UploadCV', {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    // Handle the response from the server
                })
                .catch(error => {
                    console.error(error);
                });
        });



        function uploadImage() {
              var input = document.getElementById('imageInput');
              var file = input.files[0];
              if (file) {
                var reader = new FileReader();

                reader.onload = function(e) {
                  var imageData = e.target.result;
                  //console.log(imageData);
                  uploadToServer(imageData);
                }

                reader.readAsDataURL(file);
              }
            }      
            function uploadToServer(imageData) {
            const obj = { "userName": "@User.Identity.Name", "pictureData": `${imageData}` };
              const data = JSON.stringify(obj);
              console.log(data);
               fetch('/User/GenerateImage', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: data
            }).then(response => response.text())
            .then(data =>{
                console.log(data);
                const img = document.getElementById("imageOfUser");
                    img.src = data + '?timestamp=' + new Date().getTime();
            })
                .catch(error => {
                console.error(error);
                });

            }

        




        buttonEdit.onclick = function () {
            buttonEdit.setAttribute("hidden","hidden");
            buttonSave.removeAttribute("hidden");
            buttonCancel.removeAttribute("hidden");        
            for(let i=0;i<divs.length;i++)
            {
                divs[i].getElementsByTagName("p")[0].setAttribute("hidden", "hidden");
                divs[i].getElementsByTagName("input")[0].removeAttribute("hidden");            
            }
            
        }
        buttonCancel.onclick = function () {
            buttonEdit.removeAttribute("hidden");
            buttonSave.setAttribute("hidden", "hidden");
            buttonCancel.setAttribute("hidden", "hidden");        
            for (let i = 0; i < divs.length; i++) {
                divs[i].getElementsByTagName("p")[0].removeAttribute("hidden");
                divs[i].getElementsByTagName("input")[0].setAttribute("hidden", "hidden");            
            }
        }
        buttonSave.onclick = function () {
            buttonEdit.removeAttribute("hidden");
            buttonSave.setAttribute("hidden", "hidden");
            buttonCancel.setAttribute("hidden", "hidden");
            const firstName = document.getElementById("FirstName").value;
            const lastName = document.getElementById("LastName").value;
            const formData = { "UserName": "@User.Identity.Name", "FirstName": firstName, "LastName": lastName};
            const appointment = JSON.stringify(formData);

            fetch('/User/ChangeProfile', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: appointment
            });

            for(let i=0;i<divs.length;i++)
            {
                divs[i].getElementsByTagName("p")[0].removeAttribute("hidden");
                divs[i].getElementsByTagName("input")[0].setAttribute("hidden", "hidden");
            }
        }
        if("@User.IsInRole("Patient")".localeCompare("True") == 0)
        {
        fetch('/User/MyTerms?userName=@User.Identity.Name').then(response => response.json())
            .then(data =>{

                var tbody = document.querySelector('table tbody');
                if (tbody) {
                    // Remove all tr elements from tbody
                    while (tbody.firstChild) {
                        tbody.removeChild(tbody.firstChild);
                    }
                }

                const terms = document.getElementById("terms");
                terms.innerHTML = "";
                for(let i=0;i<data.length;i++)
                {
                   const div = document.createElement("div");
                   const l = document.createElement("label");
                    const startDateT = new Date(data[i].startDateS);
                    const endDateT = new Date(data[i].endDateS);
                    const dateString = "" + startDateT.getDate() + "/" + (startDateT.getMonth() + 1) + " " + startDateT.getHours() + ":" + startDateT.getMinutes() + " - " + endDateT.getHours() + ":" + endDateT.getMinutes();
                    
                    l.innerText = dateString;
                    div.appendChild(l);
                    const buttonCancel = document.createElement("input");
                    buttonCancel.setAttribute('class','btn btn-danger');
                    buttonCancel.setAttribute('type','submit');
                    buttonCancel.textContent = "Cancel term";
                    buttonCancel.setAttribute('value','Cancel term');

                    buttonCancel.addEventListener("click", function () {
                        const startDate = new Date(data[i].startDate);
                        const Obj = { "fromWho": "@User.Identity.Name", "ToWho": data[i].doctorUserName, "startTime": startDate };
                        const app = JSON.stringify(Obj);
                        fetch('/User/DeleteMyAppointment', {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: app
                        })
                    });
                    const tr = document.createElement('tr');
                    const tdDate = document.createElement('td');
                    const tdInterventions = document.createElement('td');
                    const tdFullName = document.createElement('td');

                    const labelFullName = document.createElement('label');
                    labelFullName.textContent =  data[i].fullName;
                                
                    tdFullName.appendChild(labelFullName);
                    tdInterventions.appendChild(buttonCancel);
                    tdDate.appendChild(l);                    
                    tr.appendChild(tdDate);
                    tr.appendChild(tdFullName);
                    tr.appendChild(tdInterventions);
                    tbody.appendChild(tr);

                    //div.appendChild(buttonCancel);
                    //terms.appendChild(div);
                }
            })
        }else
        {
            if ("@User.IsInRole("Doctor")".localeCompare("True") == 0)
            {
                const terms = document.getElementById("terms");
                terms.innerHTML = "";
                const pickDate = document.createElement("input");
                pickDate.type="date";           
                const divPick = document.getElementById("pickDate");
                divPick.innerHTML = "";

                pickDate.onchange = function () {
                    terms.innerHTML = "";
                    fetch(`/User/DoctorTerms?userName=@User.Identity.Name&searchDate=${pickDate.value}`).then(response => response.json())
                        .then(data => {
                            console.log(data)

                            var tbody = document.querySelector('table tbody');
                                if (tbody) {
                                    // Remove all tr elements from tbody
                                    while (tbody.firstChild) {
                                        tbody.removeChild(tbody.firstChild);
                                    }
                                }


                            for (let i = 0; i < data.length; i++) {

                                //const deserializedObject1 = JSON.parse(data[i].startDateS);
                                //const deserializedObject2 = JSON.parse(data[i].endDateS);
                                //console.log(deserializedObject.DateTime);
                                const startDateT = new Date(data[i].startDateS);
                                const endDateT = new Date(data[i].endDateS);
                                const p = document.createElement("label");
                                p.textContent = "" + startDateT.getHours() + ":" + startDateT.getMinutes() + " - " + endDateT.getHours() + ":" + endDateT.getMinutes();
                                
                                

                                const tr = document.createElement('tr');
                                const tdDate = document.createElement('td');
                                const tdInterventions = document.createElement('td');
                                const tdFullName = document.createElement('td');

                                const interventionsData = document.createElement('label');
                                for(let j=0;j<data[i].interventions.length;j++){
                                    interventionsData.textContent  += data[i].interventions[j]+" ";
                                }
                                const labelName = document.createElement('label');
                                labelName.textContent = data[i].patientFullName;
                                tdFullName.appendChild(labelName);

                                tdInterventions.appendChild(interventionsData);
                                tdDate.appendChild(p);
                                tr.appendChild(tdDate);
                                tr.appendChild(tdFullName);
                                tr.appendChild(tdInterventions);
                                tbody.appendChild(tr);
                                //terms.appendChild(p);
                            }
                        });
                    }            
                divPick.appendChild(pickDate);  
            }
        }
    </script>




    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }




</body>

</html>

<style>
    .p{
        margin:0px;
    }
    .imageInput
    {
        display: none;
    }
    .custom-file-button {
        display: inline-block;
        padding: 8px 20px;
        background-color: #007bff;
        color: #fff;
        border: none;
        cursor: pointer;
    }

    #imageInput {
        display: none; /* Hide the default file input button */
    }
</style>


